#!/usr/bin/env bash
# Export Railway service variables to local .env files for development
# Source of truth remains Railway. This script only mirrors variables locally.
#
# Requirements:
#   - Railway CLI installed: npm i -g @railway/cli
#   - Logged in: railway login --browserless
#   - Set environment variables before running:
#       RAILWAY_PROJECT_NAME   e.g. murallayes
#       RAILWAY_ENVIRONMENT    e.g. production | staging | development
#   - Optional overrides:
#       SERVICES="Backend Frontend"   # which services to export
#       BACKEND_OUT=muralla-backend/.env.railway
#       FRONTEND_OUT=muralla-frontend/.env.railway
#
# Usage:
#   RAILWAY_PROJECT_NAME=<proj> RAILWAY_ENVIRONMENT=<env> ./scripts/pull_railway_vars.sh
#
# Notes:
#   - The generated .env files may contain secrets. DO NOT COMMIT THEM.
#   - Prefer `railway run` for running locally without writing files, e.g.:
#       railway run -s Backend -e <env> -- pnpm -C muralla-backend start:dev
#       railway run -s Frontend -e <env> -- pnpm -C muralla-frontend dev

set -euo pipefail

: "${RAILWAY_PROJECT_NAME:?RAILWAY_PROJECT_NAME is required}"
: "${RAILWAY_ENVIRONMENT:?RAILWAY_ENVIRONMENT is required}"

SERVICES=${SERVICES:-"Backend Frontend"}
BACKEND_OUT=${BACKEND_OUT:-"muralla-backend/.env.railway"}
FRONTEND_OUT=${FRONTEND_OUT:-"muralla-frontend/.env.railway"}

rw() {
  railway "$@"
}

ensure_cli() {
  if ! command -v railway >/dev/null 2>&1; then
    echo "❌ Railway CLI not found. Install: npm i -g @railway/cli" >&2
    exit 1
  fi
  if ! rw whoami >/dev/null 2>&1; then
    echo "❌ Not logged in. Run: railway login --browserless" >&2
    exit 1
  fi
}

link_service() {
  local svc="$1"
  rw link -p "$RAILWAY_PROJECT_NAME" -e "$RAILWAY_ENVIRONMENT" -s "$svc" >/dev/null
}

export_service() {
  local svc="$1"
  local outfile="$2"
  link_service "$svc"
  mkdir -p "$(dirname "$outfile")"
  {
    echo "# Generated by pull_railway_vars.sh on $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
    echo "# Project: $RAILWAY_PROJECT_NAME  Environment: $RAILWAY_ENVIRONMENT  Service: $svc"
    echo "# WARNING: Contains secrets. Do not commit."
    rw variables -k
  } > "$outfile"
  echo "✓ Wrote $outfile"
}

main() {
  ensure_cli
  for svc in $SERVICES; do
    case "$svc" in
      Backend)
        export_service "Backend" "$BACKEND_OUT"
        ;;
      Frontend)
        export_service "Frontend" "$FRONTEND_OUT"
        ;;
      *)
        echo "ℹ️ Skipping unknown service: $svc" ;;
    esac
  done
}

main "$@"
